{
    "AWS CCP": [
      { "question": "What is AWS?", "answer": "AWS stands for Amazon Web Services.", "color": "#D0E8FF" },
      { "question": "What is EC2?", "answer": "EC2 is a cloud computing service provided by AWS.", "color": "#E8F6E0" },
      { "question": "What is S3?", "answer": "S3 is a scalable storage service by AWS.", "color": "#D0E8FF" },
      { "question": "What is Lambda?", "answer": "Lambda allows you to run code without provisioning servers.", "color": "#E8F6E0" },
      { "question": "What is CloudFormation?", "answer": "CloudFormation provides a way to model and provision AWS resources using templates.", "color": "#D0E8FF" },
      { "question": "What is IAM?", "answer": "IAM stands for Identity and Access Management, used to manage access to AWS resources.", "color": "#E8F6E0" },
      { "question": "What is VPC?", "answer": "VPC stands for Virtual Private Cloud, a service that provides a logically isolated network for AWS resources.", "color": "#D0E8FF" },
      { "question": "What is RDS?", "answer": "RDS stands for Relational Database Service.", "color": "#E8F6E0" },
      { "question": "What is CloudWatch?", "answer": "CloudWatch is a monitoring and observability service.", "color": "#D0E8FF" },
      { "question": "What is CloudTrail?", "answer": "CloudTrail is a service for logging and monitoring account activity.", "color": "#E8F6E0" },
      { "question": "What is Route 53?", "answer": "Route 53 is a scalable DNS web service.", "color": "#D0E8FF" },
      { "question": "What is Elastic Beanstalk?", "answer": "Elastic Beanstalk is a service for deploying and scaling web applications.", "color": "#E8F6E0" },
      { "question": "What is AWS Fargate?", "answer": "Fargate is a serverless compute engine for containers.", "color": "#D0E8FF" },
      { "question": "What is CloudFront?", "answer": "CloudFront is a content delivery network service.", "color": "#E8F6E0" },
      { "question": "What is AWS Glue?", "answer": "Glue is a fully managed ETL service.", "color": "#D0E8FF" },
      { "question": "What is AWS Kinesis?", "answer": "Kinesis is a platform for streaming data on AWS.", "color": "#E8F6E0" },
      { "question": "What is SQS?", "answer": "SQS stands for Simple Queue Service.", "color": "#D0E8FF" },
      { "question": "What is SNS?", "answer": "SNS stands for Simple Notification Service.", "color": "#E8F6E0" },
      { "question": "What is Redshift?", "answer": "Redshift is a fully managed data warehouse service.", "color": "#D0E8FF" },
      { "question": "What is DynamoDB?", "answer": "DynamoDB is a NoSQL database service.", "color": "#E8F6E0" },
      { "question": "What is AWS CodePipeline?", "answer": "CodePipeline is a CI/CD service for fast and reliable application and infrastructure updates.", "color": "#D0E8FF" }
    ],
    "OOPS": [
      { "question": "What is OOP?", "answer": "OOP stands for Object-Oriented Programming.", "color": "#D0E8FF" },
      { "question": "What is a Class?", "answer": "A class is a blueprint for creating objects.", "color": "#E8F6E0" },
      { "question": "What is an Object?", "answer": "An object is an instance of a class.", "color": "#D0E8FF" },
      { "question": "What is Inheritance?", "answer": "Inheritance allows a class to inherit properties and methods from another class.", "color": "#E8F6E0" },
      { "question": "What is Polymorphism?", "answer": "Polymorphism allows methods to do different things based on the object it is acting upon.", "color": "#D0E8FF" },
      { "question": "What is Encapsulation?", "answer": "Encapsulation hides the internal state of an object and only allows access through methods.", "color": "#E8F6E0" },
      { "question": "What is Abstraction?", "answer": "Abstraction is the concept of hiding the complex implementation details and showing only the essential features.", "color": "#D0E8FF" },
      { "question": "What is a Constructor?", "answer": "A constructor is a special method used to initialize objects.", "color": "#E8F6E0" },
      { "question": "What is Method Overloading?", "answer": "Method overloading is defining multiple methods with the same name but different parameters.", "color": "#D0E8FF" },
      { "question": "What is Method Overriding?", "answer": "Method overriding is redefining a method in a subclass that is already defined in the parent class.", "color": "#E8F6E0" },
      { "question": "What is a Static Method?", "answer": "A static method is a method that belongs to the class rather than any object instance.", "color": "#D0E8FF" },
      { "question": "What is a Singleton Class?", "answer": "A singleton class is a class that can have only one instance at any given time.", "color": "#E8F6E0" },
      { "question": "What is Multiple Inheritance?", "answer": "Multiple inheritance is when a class can inherit features from more than one parent class.", "color": "#D0E8FF" },
      { "question": "What is an Interface?", "answer": "An interface is a reference type in Java that is similar to a class but only contains abstract methods.", "color": "#E8F6E0" },
      { "question": "What is an Abstract Class?", "answer": "An abstract class is a class that cannot be instantiated and is designed to be subclassed.", "color": "#D0E8FF" },
      { "question": "What is Composition?", "answer": "Composition is a design principle where one class contains a reference to another class.", "color": "#E8F6E0" },
      { "question": "What is Association?", "answer": "Association is a relationship where all objects have their own lifecycle and there is no owner.", "color": "#D0E8FF" },
      { "question": "What is Aggregation?", "answer": "Aggregation is a special form of association where objects have their own lifecycle but there is ownership.", "color": "#E8F6E0" },
      { "question": "What is Delegation?", "answer": "Delegation is a design pattern where an object handles a request by delegating to a second helper object.", "color": "#D0E8FF" },
      { "question": "What is Coupling?", "answer": "Coupling refers to the degree of direct knowledge that one class has of another.", "color": "#E8F6E0" },
      { "question": "What is Cohesion?", "answer": "Cohesion refers to how closely the methods in a class are related to each other.", "color": "#D0E8FF" }
    ],
    "CCNA": [
      { "question": "What is CCNA?", "answer": "CCNA stands for Cisco Certified Network Associate.", "color": "#D0E8FF" },
      { "question": "What is a Router?", "answer": "A router is a networking device that forwards data packets between computer networks.", "color": "#E8F6E0" },
      { "question": "What is a Switch?", "answer": "A switch is a device that filters and forwards packets between LAN segments.", "color": "#D0E8FF" },
      { "question": "What is an IP Address?", "answer": "An IP address is a unique address that identifies a device on the internet or a local network.", "color": "#E8F6E0" },
      { "question": "What is a Subnet?", "answer": "A subnet is a segmented piece of a larger network.", "color": "#D0E8FF" },
      { "question": "What is VLAN?", "answer": "VLAN stands for Virtual Local Area Network.", "color": "#E8F6E0" },
      { "question": "What is NAT?", "answer": "NAT stands for Network Address Translation.", "color": "#D0E8FF" },
      { "question": "What is a MAC Address?", "answer": "A MAC address is a unique identifier assigned to network interfaces.", "color": "#E8F6E0" },
      { "question": "What is a Firewall?", "answer": "A firewall is a network security device that monitors and controls incoming and outgoing network traffic.", "color": "#D0E8FF" },
      { "question": "What is DHCP?", "answer": "DHCP stands for Dynamic Host Configuration Protocol.", "color": "#E8F6E0" },
      { "question": "What is DNS?", "answer": "DNS stands for Domain Name System.", "color": "#D0E8FF" },
      { "question": "What is OSI Model?", "answer": "The OSI model is a conceptual framework used to understand network interactions in seven layers.", "color": "#E8F6E0" },
      { "question": "What is TCP/IP Model?", "answer": "The TCP/IP model is a set of protocols to connect network devices on the internet.", "color": "#D0E8FF" },
      { "question": "What is Ping?", "answer": "Ping is a utility to test the reachability of a host on an IP network.", "color": "#E8F6E0" },
      { "question": "What is ARP?", "answer": "ARP stands for Address Resolution Protocol.", "color": "#D0E8FF" },
      { "question": "What is VPN?", "answer": "VPN stands for Virtual Private Network.", "color": "#E8F6E0" },
      { "question": "What is MPLS?", "answer": "MPLS stands for Multiprotocol Label Switching.", "color": "#D0E8FF" },
      { "question": "What is BGP?", "answer": "BGP stands for Border Gateway Protocol.", "color": "#E8F6E0" },
      { "question": "What is EIGRP?", "answer": "EIGRP stands for Enhanced Interior Gateway Routing Protocol.", "color": "#D0E8FF" },
      { "question": "What is OSPF?", "answer": "OSPF stands for Open Shortest Path First.", "color": "#E8F6E0" },
      { "question": "What is RIP?", "answer": "RIP stands for Routing Information Protocol.", "color": "#D0E8FF" },
      { "question": "What is STP?", "answer": "STP stands for Spanning Tree Protocol.", "color": "#E8F6E0" }
    ],
    "React Native": [
      { "question": "What is React Native?", "answer": "React Native is a framework for building native apps using React.", "color": "#D0E8FF" },
      { "question": "What is a Component?", "answer": "A component is a building block in React applications.", "color": "#E8F6E0" },
      { "question": "What is JSX?", "answer": "JSX is a syntax extension for JavaScript, used with React to describe UI elements.", "color": "#D0E8FF" },
      { "question": "What is State?", "answer": "State is an object that determines how a component renders and behaves.", "color": "#E8F6E0" },
      { "question": "What is a Prop?", "answer": "Props are inputs to a React component that are passed down from a parent component.", "color": "#D0E8FF" },
      { "question": "What is Redux?", "answer": "Redux is a state management library for JavaScript apps.", "color": "#E8F6E0" },
      { "question": "What is a Hook?", "answer": "Hooks are functions that let you use state and other React features in functional components.", "color": "#D0E8FF" },
      { "question": "What is React Navigation?", "answer": "React Navigation is a library for routing and navigation in React Native apps.", "color": "#E8F6E0" },
      { "question": "What is Expo?", "answer": "Expo is a framework and platform for universal React applications.", "color": "#D0E8FF" },
      { "question": "What is Flexbox?", "answer": "Flexbox is a layout model for creating responsive layouts.", "color": "#E8F6E0" },
      { "question": "What is AsyncStorage?", "answer": "AsyncStorage is an unencrypted, asynchronous, persistent, key-value storage system.", "color": "#D0E8FF" },
      { "question": "What is a FlatList?", "answer": "FlatList is a performant interface for rendering simple, flat lists.", "color": "#E8F6E0" },
      { "question": "What is a SectionList?", "answer": "SectionList is a performant interface for rendering sections of data.", "color": "#D0E8FF" },
      { "question": "What is a TouchableOpacity?", "answer": "TouchableOpacity is a component that responds to touch events with opacity transitions.", "color": "#E8F6E0" },
      { "question": "What is a ScrollView?", "answer": "ScrollView is a container that allows for scrolling content vertically or horizontally.", "color": "#D0E8FF" },
      { "question": "What is Context API?", "answer": "Context API is a way to manage global state in a React application.", "color": "#E8F6E0" },
      { "question": "What is Prop Drilling?", "answer": "Prop drilling is the process of passing data from a higher-level component to a deeply nested component.", "color": "#D0E8FF" },
      { "question": "What is a StyleSheet?", "answer": "StyleSheet is an abstraction similar to CSS StyleSheets.", "color": "#E8F6E0" },
      { "question": "What is Metro Bundler?", "answer": "Metro Bundler is a JavaScript bundler for React Native.", "color": "#D0E8FF" },
      { "question": "What is HMR?", "answer": "HMR stands for Hot Module Replacement, a feature that allows you to inject updated modules into the running app.", "color": "#E8F6E0" },
      { "question": "What is Hermes?", "answer": "Hermes is a JavaScript engine optimized for running React Native.", "color": "#D0E8FF" },
      { "question": "What is Reanimated?", "answer": "Reanimated is a library for animations in React Native.", "color": "#E8F6E0" }
    ],
    "Git": [
      { "question": "What is Git?", "answer": "Git is a distributed version control system.", "color": "#D0E8FF" },
      { "question": "What is a Repository?", "answer": "A repository is a storage space where your project resides.", "color": "#E8F6E0" },
      { "question": "What is a Commit?", "answer": "A commit is a record of changes made to the repository.", "color": "#D0E8FF" },
      { "question": "What is a Branch?", "answer": "A branch is a parallel version of a repository.", "color": "#E8F6E0" },
      { "question": "What is a Merge?", "answer": "A merge is the process of combining changes from different branches.", "color": "#D0E8FF" },
      { "question": "What is a Pull Request?", "answer": "A pull request is a way to submit contributions to a project.", "color": "#E8F6E0" },
      { "question": "What is Cloning?", "answer": "Cloning is the process of creating a copy of a repository.", "color": "#D0E8FF" },
      { "question": "What is Forking?", "answer": "Forking is creating a personal copy of someone else's project.", "color": "#E8F6E0" },
      { "question": "What is a Remote?", "answer": "A remote is a version of your repository hosted on the internet or network.", "color": "#D0E8FF" },
      { "question": "What is Staging Area?", "answer": "The staging area is a place to keep changes before committing them.", "color": "#E8F6E0" },
      { "question": "What is Checkout?", "answer": "Checkout is the process of switching between different versions of a project.", "color": "#D0E8FF" },
      { "question": "What is Rebase?", "answer": "Rebase is the process of moving or combining a sequence of commits to a new base commit.", "color": "#E8F6E0" },
      { "question": "What is a Conflict?", "answer": "A conflict occurs when changes from different commits cannot be automatically merged.", "color": "#D0E8FF" },
      { "question": "What is .gitignore?", "answer": ".gitignore is a file specifying which files should be ignored by Git.", "color": "#E8F6E0" },
      { "question": "What is Git Bash?", "answer": "Git Bash is an application providing Git command line experience on Windows.", "color": "#D0E8FF" },
      { "question": "What is GitHub?", "answer": "GitHub is a platform for hosting and collaborating on Git repositories.", "color": "#E8F6E0" },
      { "question": "What is a Tag?", "answer": "A tag is a reference to a specific point in the history of a repository.", "color": "#D0E8FF" },
      { "question": "What is Fetch?", "answer": "Fetch is the process of downloading objects and refs from another repository.", "color": "#E8F6E0" },
      { "question": "What is Push?", "answer": "Push is the process of uploading local repository content to a remote repository.", "color": "#D0E8FF" },
      { "question": "What is Pull?", "answer": "Pull is the process of fetching and merging changes from a remote repository to the local repository.", "color": "#E8F6E0" },
      { "question": "What is Submodule?", "answer": "A submodule is a repository nested inside another repository.", "color": "#D0E8FF" },
      { "question": "What is Cherry-pick?", "answer": "Cherry-pick is the process of choosing a specific commit from one branch and applying it to another.", "color": "#E8F6E0" },
      { "question": "What is Git Flow?", "answer": "Git Flow is a branching model for Git.", "color": "#D0E8FF" },
      { "question": "What is Blame?", "answer": "Blame is a tool to determine the author of changes in a file.", "color": "#E8F6E0" },
      { "question": "What is Diff?", "answer": "Diff is a way to show changes between commits, commit and working tree, etc.", "color": "#D0E8FF" },
      { "question": "What is Reset?", "answer": "Reset is the process of undoing changes in the repository.", "color": "#E8F6E0" },
      { "question": "What is Revert?", "answer": "Revert is the process of creating a new commit that undoes the changes made by previous commits.", "color": "#D0E8FF" },
      { "question": "What is Stash?", "answer": "Stash is a way to save changes temporarily without committing them.", "color": "#E8F6E0" }
    ],
    "Python": [
      { "question": "What is Python?", "answer": "Python is a high-level, interpreted programming language.", "color": "#D0E8FF" },
      { "question": "What is PEP 8?", "answer": "PEP 8 is the style guide for Python code.", "color": "#E8F6E0" },
      { "question": "What is a List?", "answer": "A list is a collection data type that is ordered and changeable.", "color": "#D0E8FF" },
      { "question": "What is a Tuple?", "answer": "A tuple is a collection data type that is ordered and unchangeable.", "color": "#E8F6E0" },
      { "question": "What is a Dictionary?", "answer": "A dictionary is a collection data type that is unordered, changeable, and indexed.", "color": "#D0E8FF" },
      { "question": "What is a Set?", "answer": "A set is a collection data type that is unordered and unindexed.", "color": "#E8F6E0" },
      { "question": "What is a Function?", "answer": "A function is a block of code that only runs when it is called.", "color": "#D0E8FF" },
      { "question": "What is a Lambda?", "answer": "A lambda is a small anonymous function.", "color": "#E8F6E0" },
      { "question": "What is a Module?", "answer": "A module is a file containing Python code that can be imported into another Python program.", "color": "#D0E8FF" },
      { "question": "What is a Package?", "answer": "A package is a collection of Python modules.", "color": "#E8F6E0" },
      { "question": "What is PIP?", "answer": "PIP is a package manager for Python.", "color": "#D0E8FF" },
      { "question": "What is a Class?", "answer": "A class is a blueprint for creating objects.", "color": "#E8F6E0" },
      { "question": "What is an Object?", "answer": "An object is an instance of a class.", "color": "#D0E8FF" },
      { "question": "What is Inheritance?", "answer": "Inheritance allows a class to inherit properties and methods from another class.", "color": "#E8F6E0" },
      { "question": "What is Polymorphism?", "answer": "Polymorphism allows methods to do different things based on the object it is acting upon.", "color": "#D0E8FF" },
      { "question": "What is Encapsulation?", "answer": "Encapsulation hides the internal state of an object and only allows access through methods.", "color": "#E8F6E0" },
      { "question": "What is Abstraction?", "answer": "Abstraction is the concept of hiding the complex implementation details and showing only the essential features.", "color": "#D0E8FF" },
      { "question": "What is an Exception?", "answer": "An exception is an event that occurs during the execution of a program that disrupts the normal flow of instructions.", "color": "#E8F6E0" },
      { "question": "What is a Decorator?", "answer": "A decorator is a function that takes another function and extends its behavior without explicitly modifying it.", "color": "#D0E8FF" },
      { "question": "What is a Generator?", "answer": "A generator is a function that returns an iterator and allows you to iterate through a set of values.", "color": "#E8F6E0" },
      { "question": "What is List Comprehension?", "answer": "List comprehension provides a concise way to create lists.", "color": "#D0E8FF" },
      { "question": "What is a Virtual Environment?", "answer": "A virtual environment is a tool to keep dependencies required by different projects in separate places.", "color": "#E8F6E0" },
      { "question": "What is a Context Manager?", "answer": "A context manager is a way to allocate and release resources precisely when you want to.", "color": "#D0E8FF" },
      { "question": "What is GIL?", "answer": "GIL stands for Global Interpreter Lock, a mutex that protects access to Python objects.", "color": "#E8F6E0" },
      { "question": "What is Multithreading?", "answer": "Multithreading is a technique to run multiple threads concurrently.", "color": "#D0E8FF" },
      { "question": "What is Multiprocessing?", "answer": "Multiprocessing is a technique to run multiple processes concurrently.", "color": "#E8F6E0" },
      { "question": "What is the difference between Python 2 and Python 3?", "answer": "Python 3 is the future of Python, and Python 2 is legacy.", "color": "#D0E8FF" },
      { "question": "What is a Docstring?", "answer": "A docstring is a string literal used to document a module, class, or function.", "color": "#E8F6E0" },
      { "question": "What is Unit Testing?", "answer": "Unit testing is a way to test individual units of source code.", "color": "#D0E8FF" },
      { "question": "What is a Bytecode?", "answer": "Bytecode is an intermediate code that is executed by the Python interpreter.", "color": "#E8F6E0" }
    ],
    
      "DSA Interview Prep": [
        { "question": "What is an Array?", "answer": "An array is a collection of elements stored at contiguous memory locations.","color": "#D0E8FF" },
        { "question": "What is a Linked List?", "answer": "A linked list is a linear data structure where elements are stored in nodes pointing to the next node.","color": "#E8F6E0" },
        { "question": "What is a Stack?", "answer": "A stack is a LIFO (Last In First Out) data structure.","color": "#D0E8FF" },
        { "question": "What is a Queue?", "answer": "A queue is a FIFO (First In First Out) data structure.","color": "#E8F6E0" },
        { "question": "What is a Binary Tree?", "answer": "A binary tree is a tree data structure where each node has at most two children.","color": "#D0E8FF" },
        { "question": "What is a Binary Search Tree (BST)?", "answer": "A binary search tree is a binary tree where left children are less and right children are greater than the root.","color": "#E8F6E0" },
        { "question": "What is a Graph?", "answer": "A graph is a collection of nodes (vertices) and edges.","color": "#D0E8FF" },
        { "question": "What is a Hash Table?", "answer": "A hash table is a data structure that provides fast insertion, deletion, and lookup using a hash function.","color": "#E8F6E0" },
        { "question": "What is a Heap?", "answer": "A heap is a complete binary tree where each node has a priority over its children.","color": "#D0E8FF" },
        { "question": "What is a Trie?", "answer": "A trie is a tree data structure used to store a dynamic set of strings.","color": "#E8F6E0" },
        { "question": "What is a Priority Queue?", "answer": "A priority queue is a data structure that stores elements with associated priorities.","color": "#D0E8FF" },
        { "question": "What is a Segment Tree?", "answer": "A segment tree is a tree data structure for storing intervals or segments.","color": "#E8F6E0" },
        { "question": "What is a Fenwick Tree?", "answer": "A Fenwick tree is a data structure that can efficiently update elements and calculate prefix sums in a table of numbers.","color": "#D0E8FF" },
        { "question": "What is a Disjoint Set?", "answer": "A disjoint set is a data structure that keeps track of a set of elements partitioned into a number of disjoint (non-overlapping) subsets.","color": "#E8F6E0" },
        { "question": "What is a Bloom Filter?", "answer": "A Bloom filter is a space-efficient probabilistic data structure used to test whether an element is a member of a set.","color": "#D0E8FF" },
        { "question": "What is a LRU Cache?", "answer": "A Least Recently Used (LRU) cache is a cache eviction policy that removes the least recently used items first.","color": "#E8F6E0" },
        { "question": "What is a B-Tree?", "answer": "A B-tree is a self-balancing tree data structure that maintains sorted data and allows searches, sequential access, insertions, and deletions in logarithmic time.","color": "#D0E8FF" },
        { "question": "What is a Red-Black Tree?", "answer": "A red-black tree is a self-balancing binary search tree where each node has an extra bit for denoting the color.","color": "#E8F6E0" },
        { "question": "What is a Suffix Array?", "answer": "A suffix array is a sorted array of all suffixes of a given string.","color": "#D0E8FF" },
        { "question": "What is a Suffix Tree?", "answer": "A suffix tree is a compressed trie containing all the suffixes of the given text as their keys and positions in the text as their values.","color": "#E8F6E0" },
        { "question": "What is a AVL Tree?", "answer": "An AVL tree is a self-balancing binary search tree where the heights of the two child subtrees of any node differ by at most one.","color": "#D0E8FF" },
        { "question": "What is a K-D Tree?", "answer": "A k-d tree is a space-partitioning data structure for organizing points in a k-dimensional space.","color": "#E8F6E0"},
        { "question": "How to find the maximum subarray sum?", "answer": "Use Kadane's Algorithm with O(n) time complexity.", "color": "#D0E8FF" },
        { "question": "How to merge two sorted arrays?", "answer": "Use two pointers to merge arrays in O(n + m) time.", "color": "#D0E8FF"  },
        { "question": "What is the time complexity to search an element in a sorted array?", "answer": "Use Binary Search with O(log n) time complexity." , "color": "#D0E8FF" },
        { "question": "What is a String?", "answer": "A string is a sequence of characters.", "color": "#D0E8FF"  },
        { "question": "How to check if two strings are anagrams?", "answer": "Sort both strings or use a character count array.", "color": "#D0E8FF"  },
        { "question": "How to find the longest palindromic substring?", "answer": "Use Dynamic Programming or expand around the center technique.", "color": "#D0E8FF"  },
        { "question": "How to perform string reversal?", "answer": "Use two-pointer technique to swap characters.", "color": "#D0E8FF"  },
        { "question": "What is a Linked List?", "answer": "A linear data structure where elements are stored in nodes pointing to the next node.", "color": "#D0E8FF"  },
        { "question": "How to detect a cycle in a linked list?", "answer": "Use Floyd’s Cycle-Finding Algorithm (Tortoise and Hare) with O(n) time complexity.", "color": "#D0E8FF"  },
        { "question": "How to reverse a linked list?", "answer": "Iteratively reverse by changing the next pointers or use recursion.", "color": "#D0E8FF"  },
        { "question": "How to find the middle of a linked list?", "answer": "Use the slow and fast pointer approach.", "color": "#D0E8FF"  },
        { "question": "What is a Stack?", "answer": "A LIFO (Last In First Out) data structure.", "color": "#D0E8FF"  },
        { "question": "How to implement a queue using stacks?", "answer": "Use two stacks; one for enqueue and one for dequeue operations.", "color": "#D0E8FF"  },
        { "question": "What is a Queue?", "answer": "A FIFO (First In First Out) data structure.", "color": "#D0E8FF"  },
        { "question": "How to check for balanced parentheses?", "answer": "Use a stack to push and pop parentheses." , "color": "#D0E8FF" },
        { "question": "What is a Binary Tree?", "answer": "A tree data structure with at most two children per node.", "color": "#D0E8FF"  },
        { "question": "How to perform in-order traversal?", "answer": "Recursively traverse left, visit root, and traverse right.", "color": "#D0E8FF"  },
        { "question": "How to check if a binary tree is balanced?", "answer": "Use a height checking recursive function.", "color": "#D0E8FF"  },
        { "question": "What is a Binary Search Tree (BST)?", "answer": "A binary tree where left children are less and right children are greater than the root.", "color": "#D0E8FF"  },
        { "question": "What is a Graph?", "answer": "A collection of nodes (vertices) and edges.", "color": "#D0E8FF"  },
        { "question": "How to find the shortest path in an unweighted graph?", "answer": "Use Breadth-First Search (BFS).", "color": "#D0E8FF"  },
        { "question": "How to detect a cycle in a directed graph?", "answer": "Use Depth-First Search (DFS) with recursion stack.", "color": "#D0E8FF"  },
        { "question": "How to perform Depth-First Search (DFS)?", "answer": "Recursively visit all vertices and edges starting from a source vertex.", "color": "#D0E8FF"  },
        { "question": "What is Dynamic Programming?", "answer": "A method for solving complex problems by breaking them into simpler subproblems.", "color": "#D0E8FF"  },
        { "question": "How to solve the knapsack problem?", "answer": "Use DP table to store maximum values for subproblems.", "color": "#D0E8FF"  },
        { "question": "What is memoization?", "answer": "An optimization technique where intermediate results are stored.", "color": "#D0E8FF"  },
        { "question": "How to find the nth Fibonacci number?", "answer": "Use a DP array to store previous results or use memoization.", "color": "#D0E8FF"  },
        { "question": "What is Quick Sort?", "answer": "A divide-and-conquer algorithm with average O(n log n) time complexity.", "color": "#D0E8FF"  },
        { "question": "What is Merge Sort?", "answer": "A divide-and-conquer algorithm with O(n log n) time complexity.", "color": "#D0E8FF"  },
        { "question": "What is Bubble Sort?", "answer": "A simple comparison-based algorithm with O(n^2) time complexity.", "color": "#D0E8FF"  },
        { "question": "What is the time complexity of Heap Sort?", "answer": "Heap Sort has O(n log n) time complexity.", "color": "#D0E8FF"  },
        { "question": "What is Binary Search?", "answer": "A search algorithm that finds the position of a target value within a sorted array with O(log n) time complexity.", "color": "#D0E8FF"  },
        { "question": "What is Linear Search?", "answer": "A search algorithm that checks every element until the target is found with O(n) time complexity.", "color": "#D0E8FF"  },
        { "question": "How to search in a rotated sorted array?", "answer": "Use modified binary search to account for rotation.", "color": "#D0E8FF"  },
        { "question": "What is the time complexity of Ternary Search?", "answer": "Ternary Search has O(log n) time complexity.", "color": "#D0E8FF"  },
        { "question": "What is Bit Manipulation?", "answer": "A technique to perform operations at the bit level.", "color": "#D0E8FF"  },
        { "question": "How to check if a number is a power of 2?", "answer": "Use the condition `n & (n - 1) == 0`.", "color": "#D0E8FF"  },
        { "question": "How to count the number of set bits in an integer?", "answer": "Use Brian Kernighan’s Algorithm.", "color": "#D0E8FF"  },
        { "question": "How to swap two numbers without using a temporary variable?", "answer": "Use XOR swapping: `a = a ^ b; b = a ^ b; a = a ^ b;`.", "color": "#D0E8FF"  },
        { "question": "What is the Euclidean Algorithm?", "answer": "An algorithm to compute the greatest common divisor (GCD) of two numbers.", "color": "#D0E8FF"  },
        { "question": "How to check if a number is prime?", "answer": "Check divisibility from 2 to sqrt(n).", "color": "#D0E8FF"  },
        { "question": "How to generate prime numbers up to n?", "answer": "Use the Sieve of Eratosthenes.", "color": "#D0E8FF"  },
        { "question": "What is Modular Exponentiation?", "answer": "An algorithm to find `(a^b) % c` efficiently.", "color": "#D0E8FF"  },
        { "question": "What is a Hash Table?", "answer": "A data structure that provides fast insertion, deletion, and lookup using a hash function." , "color": "#D0E8FF" },
        { "question": "How to implement LRU Cache?", "answer": "Use a combination of a doubly linked list and a hash map.", "color": "#D0E8FF"  },
        { "question": "What is the Two Pointer technique?", "answer": "A technique that uses two pointers to solve array and string problems.", "color": "#D0E8FF"  },
        { "question": "What is the Sliding Window technique?", "answer": "A technique to solve problems involving subarrays or substrings within a given window size.", "color": "#D0E8FF"  }
      ],

      "DBMS":[
        { "question": "What is DBMS?", "answer": "DBMS stands for Database Management System.", "color": "#D0E8FF" },
        { "question": "What is RDBMS?", "answer": "RDBMS stands for Relational Database Management System.", "color": "#E8F6E0" },
        { "question": "What is SQL?", "answer": "SQL stands for Structured Query Language.", "color": "#D0E8FF" },
        { "question": "What is a Database?", "answer": "A database is a collection of related data.", "color": "#E8F6E0" },
        { "question": "What is a Table?", "answer": "A table is a collection of data organized in rows and columns.", "color": "#D0E8FF" },
        { "question": "What is a Record?", "answer": "A record is a row in a table representing a single entity.", "color": "#E8F6E0" },
        { "question": "What is a Column?", "answer": "A column is a vertical entity in a table representing a single attribute.", "color": "#D0E8FF" },
        { "question": "What is a Row?", "answer": "A row is a horizontal entity in a table representing a single record.", "color": "#E8F6E0" },
        { "question": "What is a Primary Key?", "answer": "A primary key is a unique identifier for each record in a table.", "color": "#D0E8FF" },
        { "question": "What is a Foreign Key?", "answer": "A foreign key is a field in a table that links to the primary key of another table.", "color": "#E8F6E0" },
        { "question": "What is a Composite Key?", "answer": "A composite key is a key made up of two or more columns.", "color": "#D0E8FF" },
        { "question": "What is a Candidate Key?", "answer": "A candidate key is a key that can uniquely identify each record in a table.", "color": "#E8F6E0" },
        { "question": "What is a Super Key?", "answer": "A super key is a set of attributes that can uniquely identify each record in a table.", "color": "#D0E8FF" },
        { "question": "What is a Surrogate Key?", "answer": "A surrogate key is a unique identifier assigned to each record in a table.", "color": "#E8F6E0" },
        { "question": "What is a Natural Key?", "answer": "A natural key is a key that is formed of attributes that already exist in the real world.", "color": "#D0E8FF" },
        { "question": "What is a NULL value?", "answer": "A NULL value is a field with no value.", "color": "#E8F6E0" },
        { "question": "What is a Unique Key?", "answer": "A unique key is a key that can uniquely identify each record in a table.", "color": "#D0E8FF" },
        { "question": "What is a Check Constraint?", "answer": "A check constraint is a rule that limits the values that can be placed in a column.", "color": "#E8F6E0" },
        { "question": "What is a Default Constraint?", "answer": "A default constraint is a rule that assigns a default value to a column when no value is specified.", "color": "#D0E8FF" },
        { "question": "What is a Index?", "answer": "An index is a performance-tuning method of allowing faster retrieval of records.", "color": "#E8F6E0" },
        { "question": "What is a View?", "answer": "A view is a virtual table based on the result-set of an SQL statement.", "color": "#D0E8FF" },
        { "question": "What is a Stored Procedure?", "answer": "A stored procedure is a prepared SQL code that can be saved and reused.", "color": "#E8F6E0" },
        { "question": "What is a Trigger?", "answer": "A trigger is a set of SQL statements that automatically triggered by certain actions.", "color": "#D0E8FF" },
        { "question": "What is a Transaction?", "answer": "A transaction is a unit of work performed against a database.", "color": "#E8F6E0" },
        { "question": "What is ACID?", "answer": "ACID stands for Atomicity, Consistency, Isolation, Durability.", "color": "#D0E8FF" },
        { "question": "What is Normalization?", "answer": "Normalization is the process of organizing data in a database.", "color": "#E8F6E0" },
        { "question": "What is Denormalization?", "answer": "Denormalization is the process of adding redundant data to speed up read performance.", "color": "#D0E8FF" },
        { "question": "What is a Join?", "answer": "A join is a clause that combines rows from two or more tables based on a related column between them.", "color": "#E8F6E0" },
        { "question": "What is an Inner Join?", "answer": "An inner join returns rows when there is at least one match in both tables.", "color": "#D0E8FF" },
        { "question": "What is an Outer Join?", "answer": "An outer join returns rows when there is no match in the other table.", "color": "#E8F6E0" },
        { "question": "What is a Left Join?", "answer": "A left join returns all rows from the left table and the matched rows from the right table.", "color": "#D0E8FF" },
        { "question": "What is a Right Join?", "answer": "A right join returns all rows from the right table and the matched rows from the left table.", "color": "#E8F6E0" },
        { "question": "What is a Full Join?", "answer": "A full join returns rows when there is a match in one of the tables.", "color": "#D0E8FF" },
        { "question": "What is a Self Join?", "answer": "A self join is a join that joins a table with itself.", "color": "#E8F6E0" },
        { "question": "What is a Cross Join?", "answer": "A cross join returns the Cartesian product of the two tables.", "color": "#D0E8FF" },
        { "question": "What is a Subquery?", "answer": "A subquery is a query nested inside another query.", "color": " #E8F6E0" },
        { "question": "What is a Union?", "answer": "A union combines the result-set of two or more SELECT statements.", "color": "#D0E8FF" },
        { "question": "What is a Group By?", "answer": "A group by clause groups rows that have the same values into summary rows.", "color": "#E8F6E0" },
        { "question": "What is a Having Clause?", "answer": "A having clause is used to filter groups in a group by clause.", "color": "#D0E8FF" },
        { "question": "What is a Case Statement?", "answer": "A case statement is a control flow structure that evaluates a condition and returns a value.", "color": "#E8F6E0" },
        { "question": "What is a Index?", "answer": "An index is a performance-tuning method of allowing faster retrieval of records.", "color": "#D0E8FF" },
        { "question": "What is a Cursor?", "answer": "A cursor is a database object used to retrieve data from a result set one row at a time.", "color": "#E8F6E0" },
        { "question": "What is a Lock?", "answer": "A lock is a mechanism to control access to a shared resource in a multi-user environment.", "color": "#D0E8FF" },
        { "question": "What is a Deadlock?", "answer": "A deadlock is a situation where two or more transactions are waiting for each other to give up locks.", "color": "#E8F6E0" },
        { "question": "What is a Normal Form?", "answer": "A normal form is a way of organizing the attributes and relations of a relational database.", "color": "#D0E8FF" },
        { "question": "What is 1NF criteria?", "answer": "1NF (First Normal Form): Ensure each column contains atomic (indivisible) values, and each record is unique.", "color": "#E8F6E0" },
        { "question": "What is 2NF criteria?", "answer": "2NF (Second Normal Form): Meet 1NF and eliminate partial dependencies; all non-key attributes must depend on the whole primary key.", "color": "#D0E8FF" },
        { "question": "What is 3NF criteria?", "answer": "3NF (Third Normal Form): Meet 2NF and eliminate transitive dependencies; non-key attributes should depend only on the primary key.", "color": "#E8F6E0" },
        { "question": "What is BCNF criteria?", "answer": "BCNF (Boyce-Codd Normal Form): A stronger version of 3NF; every determinant must be a candidate key.", "color": "#D0E8FF" },
        { "question": "What is 4NF criteria?", "answer": "4NF (Fourth Normal Form): Meet BCNF and ensure no multi-valued dependencies exist.", "color": "#E8F6E0" },
        { "question": "What is 5NF criteria?", "answer": "5NF (Fifth Normal Form): Meet 4NF and decompose relations to eliminate join dependencies.", "color": "#D0E8FF" },
        { "question": "What is 6NF criteria?", "answer": "6NF (Sixth Normal Form): Meet 5NF and decompose to the irreducible minimum, handling temporal databases.", "color": "#E8F6E0" },
        { "question": "What is DDL?", "answer": "DDL stands for Data Definition Language. It is used to define the structure of the database.", "color": "#D0E8FF" },
        { "question": "What is DML?", "answer": "DML stands for Data Manipulation Language. It is used to manipulate the data in the database.", "color": "#E8F6E0" },
        { "question": "What is DCL?", "answer": "DCL stands for Data Control Language. It is used to control access to the database.", "color": "#D0E8FF" },
        { "question": "What is TCL?", "answer": "TCL stands for Transaction Control Language. It is used to manage transactions in the database.", "color": " #E8F6E0" }
      ],

      "System Design": [
    { "question": "What is Scalability?", "answer": "Scalability is the ability of a system to handle increased load by adding resources.", "color": "#D0E8FF" },
    { "question": "What is Load Balancing?", "answer": "Load Balancing distributes incoming network traffic across multiple servers to ensure no single server is overwhelmed.", "color": "#E8F6E0" },
    { "question": "What is a CDN?", "answer": "A Content Delivery Network (CDN) is a system of distributed servers that deliver content to users based on their geographic location.", "color": "#D0E8FF" },
    { "question": "What is Caching?", "answer": "Caching stores copies of data or content to reduce latency and improve response times.", "color": "#E8F6E0" },
    { "question": "What is Sharding?", "answer": "Sharding is a database architecture that splits data into smaller, more manageable pieces across multiple databases.", "color": "#D0E8FF" },
    { "question": "What is a Microservices Architecture?", "answer": "Microservices Architecture is a design pattern where applications are composed of small, independent services that communicate over a network.", "color": "#E8F6E0" },
    { "question": "What is a Monolithic Architecture?", "answer": "Monolithic Architecture is a design where all components of an application are tightly coupled into a single unit.", "color": "#D0E8FF" },
    { "question": "What is a Message Queue?", "answer": "A Message Queue is a service that handles asynchronous communication by storing and forwarding messages between services.", "color": "#E8F6E0" },
    { "question": "What is a NoSQL Database?", "answer": "A NoSQL Database is a non-relational database that stores data in a format other than traditional rows and columns.", "color": "#D0E8FF" },
    { "question": "What is CAP Theorem?", "answer": "CAP Theorem states that a distributed system can only provide two out of three guarantees: Consistency, Availability, and Partition Tolerance.", "color": "#E8F6E0" },
    { "question": "What is a Data Warehouse?", "answer": "A Data Warehouse is a central repository of integrated data from multiple sources, used for reporting and data analysis.", "color": "#D0E8FF" },
    { "question": "What is Horizontal Scaling?", "answer": "Horizontal Scaling involves adding more machines to a system to handle increased load.", "color": "#E8F6E0" },
    { "question": "What is Vertical Scaling?", "answer": "Vertical Scaling involves adding more resources (like CPU or memory) to an existing machine.", "color": "#D0E8FF" },
    { "question": "What is a Rate Limiter?", "answer": "A Rate Limiter controls the rate of traffic sent or received by a network interface.", "color": "#E8F6E0" },
    { "question": "What is an API Gateway?", "answer": "An API Gateway is a server that acts as an API front-end, handling client requests, routing them to appropriate services, and aggregating results.", "color": "#D0E8FF" },
    { "question": "What is Consistency in Distributed Systems?", "answer": "Consistency ensures that all nodes in a distributed system reflect the same data at any given time.", "color": "#E8F6E0" },
    { "question": "What is Availability in Distributed Systems?", "answer": "Availability guarantees that every request receives a response, even if it’s a failure message.", "color": "#D0E8FF" },
    { "question": "What is Partition Tolerance in Distributed Systems?", "answer": "Partition Tolerance ensures that the system continues to operate despite network failures.", "color": "#E8F6E0" },
    { "question": "What is a Fault-Tolerant System?", "answer": "A Fault-Tolerant System can continue operating even if one or more of its components fail.", "color": "#D0E8FF" },
    { "question": "What is a Circuit Breaker Pattern?", "answer": "The Circuit Breaker Pattern prevents a system from trying to execute an operation that's likely to fail, allowing it to recover more gracefully.", "color": "#E8F6E0" },
    { "question": "What is a Distributed System?", "answer": "A Distributed System is a collection of independent computers that appears to its users as a single coherent system.", "color": "#D0E8FF" },
    { "question": "What is a Reverse Proxy?", "answer": "A Reverse Proxy is a server that sits in front of web servers and forwards client requests to the appropriate backend server.", "color": "#E8F6E0" },
    { "question": "What is Eventual Consistency?", "answer": "Eventual Consistency is a consistency model where updates to a distributed database eventually propagate to all nodes, and all nodes will converge to the same value over time.", "color": "#D0E8FF" },
    { "question": "What is Data Replication?", "answer": "Data Replication is the process of storing copies of data on multiple machines to ensure reliability and availability.", "color": "#E8F6E0" },
    { "question": "What is a Strong Consistency Model?", "answer": "Strong Consistency ensures that once data is written, all reads will return the latest written value.", "color": "#D0E8FF" }
  ],
      "DevOps": [
    { "question": "What is DevOps?", "answer": "DevOps is a set of practices that combines software development (Dev) and IT operations (Ops) to shorten the development lifecycle.", "color": "#D0E8FF" },
    { "question": "What is CI/CD?", "answer": "CI/CD stands for Continuous Integration and Continuous Deployment, a method to frequently integrate and deliver code changes.", "color": "#E8F6E0" },
    { "question": "What is Infrastructure as Code (IaC)?", "answer": "Infrastructure as Code (IaC) is the management of infrastructure through machine-readable configuration files, rather than physical hardware configuration.", "color": "#D0E8FF" },
    { "question": "What is Continuous Integration (CI)?", "answer": "Continuous Integration is the practice of automatically integrating code changes from multiple contributors into a shared repository several times a day.", "color": "#E8F6E0" },
    { "question": "What is Continuous Deployment (CD)?", "answer": "Continuous Deployment is the practice of automatically deploying every code change that passes automated testing to a production environment.", "color": "#D0E8FF" },
    { "question": "What is a Container?", "answer": "A Container is a lightweight, standalone, executable package that includes everything needed to run a piece of software, including code, runtime, and dependencies.", "color": "#E8F6E0" },
    { "question": "What is Docker?", "answer": "Docker is a platform that enables developers to create, deploy, and run applications in containers.", "color": "#D0E8FF" },
    { "question": "What is Kubernetes?", "answer": "Kubernetes is an open-source platform designed to automate deploying, scaling, and operating containerized applications.", "color": "#E8F6E0" },
    { "question": "What is a CI/CD Pipeline?", "answer": "A CI/CD Pipeline is a series of steps that must be performed in order to deliver a new version of software.", "color": "#D0E8FF" },
    { "question": "What is Monitoring in DevOps?", "answer": "Monitoring in DevOps involves tracking the performance and health of applications and infrastructure to detect issues and ensure smooth operation.", "color": "#E8F6E0" },
    { "question": "What is Configuration Management?", "answer": "Configuration Management involves managing and automating the configuration of systems, servers, and software.", "color": "#D0E8FF" },
    { "question": "What is Continuous Testing?", "answer": "Continuous Testing is the practice of executing automated tests as part of the software delivery pipeline to obtain feedback on business risks.", "color": "#E8F6E0" },
    { "question": "What is a DevOps Pipeline?", "answer": "A DevOps Pipeline is an automated workflow that includes all stages of development, from code commit to deployment.", "color": "#D0E8FF" },
    { "question": "What is a Blue-Green Deployment?", "answer": "Blue-Green Deployment is a release management strategy that reduces downtime and risk by running two identical production environments.", "color": "#E8F6E0" },
    { "question": "What is Infrastructure as a Service (IaaS)?", "answer": "IaaS provides virtualized computing resources over the internet, allowing users to run virtual machines without managing physical hardware.", "color": "#D0E8FF" },
    { "question": "What is a Service Mesh?", "answer": "A Service Mesh is a dedicated infrastructure layer that handles service-to-service communication, providing features like load balancing, service discovery, and security.", "color": "#E8F6E0" },
    { "question": "What is GitOps?", "answer": "GitOps is a practice of using Git as the single source of truth for declarative infrastructure and applications.", "color": "#D0E8FF" },
    { "question": "What is Immutable Infrastructure?", "answer": "Immutable Infrastructure is an approach where servers are never modified after deployment, and any changes result in new servers being provisioned.", "color": "#E8F6E0" },
    { "question": "What is a Canary Deployment?", "answer": "A Canary Deployment is a strategy for rolling out updates to a small subset of users before releasing to a wider audience.", "color": "#D0E8FF" },
    { "question": "What is a Rolling Deployment?", "answer": "A Rolling Deployment gradually replaces instances of the old version of an application with instances of the new version.", "color": "#E8F6E0" },
    { "question": "What is a DevOps Culture?", "answer": "DevOps Culture is a set of practices that emphasize collaboration and communication between development and operations teams.", "color": "#D0E8FF" },
    { "question": "What is a SRE (Site Reliability Engineer)?", "answer": "A SRE (Site Reliability Engineer) is responsible for ensuring the reliability, availability, and performance of software systems.", "color": "#E8F6E0" },
    { "question": "What is a Jenkins?", "answer": "Jenkins is an open-source automation server that facilitates Continuous Integration and Continuous Delivery (CI/CD).", "color": "#D0E8FF" },
    { "question": "What is a Load Balancer?", "answer": "A Load Balancer distributes network traffic across multiple servers to ensure no single server is overwhelmed.", "color": "#E8F6E0" },
    { "question": "What is a Terraform?", "answer": "Terraform is an open-source tool that allows users to define and provision infrastructure as code.", "color": "#D0E8FF" }
  ]
    
    
  }
  